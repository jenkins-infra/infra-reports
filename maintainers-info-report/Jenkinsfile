def cronExpr = env.BRANCH_IS_PRIMARY ? '@daily' : ''
def reportName = 'maintainers-info-report.json'

pipeline {
  triggers {
    cron(cronExpr)
  }
  options {
    // This pipeline takes 30-40 minutes to execute
    timeout(time: 1, unit: 'HOURS')
    lock(resource: "maintainers-info-report-${env.BRANCH_NAME}", inversePrecedence: true)
    buildDiscarder logRotator(daysToKeepStr: '90')
  }
  agent {
    label 'jnlp-linux-arm64'
  }
  stages {
    stage('Generate Maintainers Info Report') {
      when {
        anyOf {
          changeset 'maintainers-info-report/**/*'
          expression { env.BRANCH_IS_PRIMARY }
        }
      }
      environment {
        JIRA_AUTH = credentials('jiraAuth')
        REPORT_NAME = "${reportName}"
      }
      steps {
        dir('maintainers-info-report') {
          sh 'bash ./maintainers-info-report.sh > "${REPORT_NAME}"'
          archiveArtifacts reportName
        }
      }
    }
    stage('Publish Maintainers Info Report') {
      when {
        expression { env.BRANCH_IS_PRIMARY }
      }
      steps {
        dir('maintainers-info-report') {
          publishReports ([reportName])
        }
      }
    }
  }
}
