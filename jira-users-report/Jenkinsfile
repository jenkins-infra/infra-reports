def cronExpr = env.BRANCH_IS_PRIMARY ? 'H H/2 * * *' : ''
def reportName = 'jira-users-report.json'

pipeline {
  triggers {
    cron(cronExpr)
  }
  options {
    // This pipeline takes ~1.5 hour to run
    timeout(time: 2, unit: 'HOURS')
    lock(resource: "jira-users-report-${env.BRANCH_NAME}", inversePrecedence: true)
    buildDiscarder logRotator(daysToKeepStr: '90')
  }
  agent {
    label 'jnlp-linux-arm64'
  }
  stages {
    stage('Generate JIRA Users Report') {
      when {
        anyOf {
          changeset 'jira-users-report/**/*'
          expression { env.BRANCH_IS_PRIMARY }
        }
      }
      environment {
        JIRA_AUTH = credentials('jiraAuth')
        REPORT_NAME = "${reportName}"
      }
      steps {
        dir('jira-users-report') {
          sh 'bash ./user-report.sh > "${REPORT_NAME}"'
          archiveArtifacts reportName
        }
      }
    }
    stage('Publish JIRA Users Report') {
      when {
        expression { env.BRANCH_IS_PRIMARY }
      }
      steps {
        dir('jira-users-report') {
          publishReports ([reportName])
        }
      }
    }
  }
}
