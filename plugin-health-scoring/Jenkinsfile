def cronExpr = env.BRANCH_IS_PRIMARY ? '@hourly' : ''
def reportsFolder = 'plugin-health-scoring'
def reportFile = 'scores.json'
def reportLines = 0

pipeline {
  agent {
    label 'jnlp-linux-arm64'
  }

  environment {
    REPORTS_FOLDER = "${reportsFolder}"
    REPORT_FILE = "${reportFile}"
    PHS_API_URL = 'https://plugin-health.jenkins.io/api/scores'
  }

  options {
    buildDiscarder logRotator(daysToKeepStr: '90')
    lock(resource: "plugin-health-scoring-${env.BRANCH_NAME}", inversePrecedence: true)
    timeout(time: 5, unit: 'MINUTES')
    disableConcurrentBuilds()
  }

  triggers {
    cron( cronExpr )
  }

  stages {
    stage('Generate Report') {
      when {
        anyOf {
          changeset 'plugin-health-scoring/**/*'
          expression { env.BRANCH_IS_PRIMARY }
        }
      }
      steps {
        dir('plugin-health-scoring') {
          sh 'bash fetch-report.sh'
          archiveArtifacts reportFile
        }
      }
    }

    stage('Publish if report not empty') {
      when {
        anyOf {
          expression { env.BRANCH_IS_PRIMARY }
        }
      }
      steps {
        dir('plugin-health-scoring') {
          script {
            reportLines = sh(returnStdout:true, script: '''
            wc -l "${REPORT_FILE}" | awk '{print $1}'
            ''').trim()
            echo "Found reportLines=${reportLines}"
            if (reportLines > 0) {
              publishReports([ "${reportsFolder}/${reportFile}" ])
            }
          }
        }
      }
    }
  }
}
