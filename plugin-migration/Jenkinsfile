def cronExpr = env.BRANCH_IS_PRIMARY ? '@daily' : ''
def reportName = 'jenkins-plugin-migration.html'

pipeline {
  triggers {
    cron(cronExpr)
  }
  options {
    timeout(time: 10, unit: 'MINUTES')
    lock(resource: "jenkins-plugin-migration-${env.BRANCH_NAME}", inversePrecedence: true)
    buildDiscarder logRotator(daysToKeepStr: '90')
  }
  agent {
    label 'jnlp-linux-arm64'
  }
  stages {
    stage('Generate Plugin Documentation Migration Report') {
      when {
        anyOf {
          changeset 'plugin-migration/**/*'
          expression { env.BRANCH_IS_PRIMARY }
        }
      }
      environment {
        GITHUB_APP_PRIVATE_KEY_B64 = credentials('githubapp-jenkins-infra-reports-private-key-b64')
        GITHUB_APP_ID = credentials('githubapp-jenkins-infra-reports-app-identifier')
        GITHUB_ORG_NAME = "jenkinsci"
        REPORT_NAME = "${reportName}"
        NODE_ENV = "production"
      }
      steps {
        dir('plugin-migration') {
          sh 'npm ci'
          sh 'node index.js > "${REPORT_NAME}"'
          archiveArtifacts reportName
        }
      }
    }
    stage('Publish Plugin Migration Report') {
      when {
        expression { env.BRANCH_IS_PRIMARY }
      }
      steps {
        dir('plugin-migration') {
          publishReports ([reportName])
        }
      }
    }
  }
}
