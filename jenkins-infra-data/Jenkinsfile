def cronExpr = env.BRANCH_IS_PRIMARY ? '@hourly' : ''
def reportName = env.BRANCH_IS_PRIMARY ? 'index.json' : "index_PR${env.CHANGE_ID}.json"
def version = 'v1'
def reportPath = "infrastructure/${version}/${reportName}"

pipeline {
  triggers {
    cron(cronExpr)
  }
  options {
    // This pipeline takes 1-2 minutes max to execute
    timeout(time: 10, unit: 'MINUTES')
    lock(resource: 'jenkins-infra-data', inversePrecedence: true)
    buildDiscarder logRotator(daysToKeepStr: '90')
  }
  agent {
    label 'jnlp-linux-arm64'
  }
  stages {
    stage('Generate get.jenkins.io mirrors report') {
      environment {
        VERSION = "${version}"
        REPORT_NAME = "${reportName}"
        REPORT_PATH = "${reportPath}"
      }
      steps {
        dir('jenkins-infra-data') {
          sh './get-jenkins-io_mirrors.sh > "${REPORT_NAME}"'
          archiveArtifacts reportName
        }
      }
    }
    stage('Publish get.jenkins.io mirrors report') {
      when {
        expression { env.BRANCH_IS_PRIMARY }
      }
      steps {
        dir('jenkins-infra-data') {
          publishReports (["${reportPath}"])
        }
      }
    }
  }
}
