def cronExpr = env.BRANCH_IS_PRIMARY ? '@hourly' : ''
def reportName = 'index.json'
def version = 'v2'
def reportFolder = "infrastructure/${version}"

pipeline {
  triggers {
    cron(cronExpr)
  }
  options {
    // This pipeline takes 1-2 minutes max to execute
    timeout(time: 10, unit: 'MINUTES')
    lock(resource: 'jenkins-infra-data', inversePrecedence: true)
    buildDiscarder logRotator(daysToKeepStr: '90')
  }
  agent {
    label 'jnlp-linux-arm64'
  }
  environment {
    DIST_DIR = "${WORKSPACE}/dist"
    PUBLISHED_REPORT = "${reportFolder}/${reportName}"
    REPORT_FOLDER = "${reportFolder}"
    REPORT_NAME = "${reportName}"
    VERSION = "${version}"
  }
  stages {
    stage('Generate Jenkins Infrastructure Public Data report') {
      steps {
        dir('jenkins-infra-data') {
          sh './generate-infra-data.sh "${REPORT_NAME}" "${DIST_DIR}" "${VERSION}"'

          archiveArtifacts artifacts: "${env.DIST_DIR}/**/*"
        }
      }
    }
    stage('Publish Jenkins Infrastructure Public Data report') {
      when {
        expression { env.BRANCH_IS_PRIMARY }
      }
      steps {
        dir('jenkins-infra-data') {
          sh '''
          # Prepare directory/file structure for reports publication
          mkdir -p "${REPORT_FOLDER}"
          cp "${DIST_DIR}/${REPORT_NAME}" "${PUBLISHED_REPORT}"
          '''

          publishReports ([env.PUBLISHED_REPORT])
        }
      }
    }
  }
}
