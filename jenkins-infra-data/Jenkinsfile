def cronExpr = env.BRANCH_IS_PRIMARY ? '@hourly' : ''
def reportMirrorbitsMirrorsList = env.BRANCH_IS_PRIMARY ? 'mirrorbits-mirrors-list.txt' : "mirrorbits-mirrors-list-${env.BRANCH_NAME}.txt"

pipeline {
  triggers {
    cron(cronExpr)
  }
  options {
    // This pipeline takes 1-2 minutes max to execute
    timeout(time: 10, unit: 'MINUTES')
    lock(resource: 'jenkins-infra-data', inversePrecedence: true)
    buildDiscarder logRotator(daysToKeepStr: '90')
  }
  agent {
    label 'jnlp-linux-arm64'
  }
  stages {
    stage('Generate Mirrorbits Mirrors List') {
      environment {
        REPORT_NAME = "${reportMirrorbitsMirrorsList}"
        PATH = "${env.PATH}:./"
      }
      steps {
        dir('jenkins-infra-data') {
          // temporarily installed here until it is provided in the agent directly
          sh 'curl -sSL https://github.com/sibprogrammer/xq/releases/download/v1.2.3/xq_1.2.3_linux_armv7.tar.gz | tar -xz xq'
          // sh 'bash ./mirrorbits-mirrors-list.sh > "${REPORT_NAME}"'
          sh 'bash ./mirrorbits-mirrors-list.sh'
          // archiveArtifacts reportMirrorbitsMirrorsList
        }
      }
    }
    stage('Publish reports') {
      when {
        expression { env.BRANCH_IS_PRIMARY }
      }
      steps {
        dir('jenkins-infra-data') {
          publishReports ([reportMirrorbitsMirrorsList])
        }
      }
    }
  }
}
